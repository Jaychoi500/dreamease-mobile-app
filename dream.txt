import React, { useState, useEffect } from 'react';
import { Moon, Sun, BookOpen, BarChart3, Music, TreePine, Users, Settings, Plus, Heart, Play, Pause, Volume2, Star, Calendar, TrendingUp, MessageCircle } from 'lucide-react';

const DreamEase = () => {
  const [currentPage, setCurrentPage] = useState('onboarding');
  const [user, setUser] = useState(null);
  const [dreams, setDreams] = useState([]);
  const [isPlaying, setIsPlaying] = useState(false);
  const [forestLevel, setForestLevel] = useState(1);
  const [dreamPoints, setDreamPoints] = useState(0);
  const [currentSound, setCurrentSound] = useState(null);

  // 온보딩 데이터
  const [onboardingData, setOnboardingData] = useState({
    name: '',
    nightmareFrequency: '',
    sleepTime: '',
    wakeTime: '',
    sleepIssues: []
  });

  // 꿈 기록 데이터
  const [dreamEntry, setDreamEntry] = useState({
    content: '',
    emotions: [],
    intensity: 5,
    date: new Date().toISOString().split('T')[0]
  });

  // 사운드 콘텐츠
  const soundContents = [
    { id: 1, name: '진정 빗소리', category: 'nightmare', type: '악몽 직후', duration: '10분', premium: false },
    { id: 2, name: '숲속 새소리', category: 'sleep', type: '취침 전', duration: '30분', premium: false },
    { id: 3, name: '뇌파 동조 음악', category: 'healing', type: '감정 회복', duration: '15분', premium: true },
    { id: 4, name: 'ASMR 바람소리', category: 'sleep', type: '취침 전', duration: '60분', premium: true }
  ];

  // 감정 태그
  const emotionTags = [
    '무서움', '불안', '스트레스', '슬픔', '분노', '혼란', '외로움', '압박감'
  ];

  // 수면 문제 옵션
  const sleepIssues = [
    '악몽', '불면증', '얕은 잠', '자주 깸', '아침 피로', '스트레스'
  ];

  useEffect(() => {
    // 로컬에서 사용자 데이터 로드 (실제로는 API 호출)
    const savedUser = {
      name: onboardingData.name || '사용자',
      nightmareFrequency: onboardingData.nightmareFrequency,
      isPremium: false
    };
    if (savedUser.name !== '사용자') {
      setUser(savedUser);
    }
  }, [onboardingData.name]);

  // 온보딩 완료
  const completeOnboarding = () => {
    if (onboardingData.name && onboardingData.nightmareFrequency) {
      setUser({
        name: onboardingData.name,
        nightmareFrequency: onboardingData.nightmareFrequency,
        isPremium: false
      });
      setCurrentPage('home');
    }
  };

  // 꿈 기록 저장
  const saveDream = () => {
    if (dreamEntry.content) {
      const newDream = {
        id: Date.now(),
        ...dreamEntry,
        aiAnalysis: generateAIAnalysis(dreamEntry),
        timestamp: new Date()
      };
      setDreams([newDream, ...dreams]);
      setDreamPoints(prev => prev + 10);
      if (dreamPoints >= forestLevel * 50) {
        setForestLevel(prev => prev + 1);
      }
      setDreamEntry({
        content: '',
        emotions: [],
        intensity: 5,
        date: new Date().toISOString().split('T')[0]
      });
      setCurrentPage('analysis');
    }
  };

  // AI 분석 생성 (시뮬레이션)
  const generateAIAnalysis = (dream) => {
    const analyses = [
      {
        emotion: '불안감이 주요 감정으로 나타났습니다.',
        pattern: '반복되는 추격 상황이 스트레스를 나타냅니다.',
        suggestion: '취침 전 진정 음악을 들어보세요.'
      },
      {
        emotion: '두려움과 혼란이 복합적으로 나타났습니다.',
        pattern: '어둠과 관련된 상징이 자주 등장합니다.',
        suggestion: '수면 환경을 밝게 조정해보세요.'
      }
    ];
    return analyses[Math.floor(Math.random() * analyses.length)];
  };

  // 사운드 재생/정지
  const toggleSound = (sound) => {
    if (currentSound === sound.id && isPlaying) {
      setIsPlaying(false);
      setCurrentSound(null);
    } else {
      setIsPlaying(true);
      setCurrentSound(sound.id);
    }
  };

  // 온보딩 페이지
  if (currentPage === 'onboarding') {
    return (
      <div className="min-h-screen bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 text-white">
        <div className="container mx-auto px-4 py-8">
          <div className="max-w-md mx-auto">
            <div className="text-center mb-8">
              <Moon className="w-16 h-16 mx-auto mb-4 text-yellow-300" />
              <h1 className="text-3xl font-bold mb-2">DreamEase</h1>
              <p className="text-lg opacity-90">오늘도 악몽이냐? 이제 그만.</p>
            </div>

            <div className="bg-white/10 backdrop-blur-md rounded-2xl p-6 space-y-6">
              <div>
                <label className="block text-sm font-medium mb-2">이름을 알려주세요</label>
                <input
                  type="text"
                  value={onboardingData.name}
                  onChange={(e) => setOnboardingData({...onboardingData, name: e.target.value})}
                  className="w-full px-4 py-3 bg-white/20 backdrop-blur-sm rounded-lg border border-white/30 text-white placeholder-white/70"
                  placeholder="닉네임 입력"
                />
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">악몽을 얼마나 자주 꾸시나요?</label>
                <div className="space-y-2">
                  {['매일', '주 2-3회', '주 1회', '월 1-2회', '거의 없음'].map((freq) => (
                    <button
                      key={freq}
                      onClick={() => setOnboardingData({...onboardingData, nightmareFrequency: freq})}
                      className={`w-full p-3 rounded-lg text-left transition-all ${
                        onboardingData.nightmareFrequency === freq
                          ? 'bg-purple-600 border-2 border-purple-400'
                          : 'bg-white/10 border border-white/30 hover:bg-white/20'
                      }`}
                    >
                      {freq}
                    </button>
                  ))}
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium mb-2">주요 수면 문제 (복수 선택 가능)</label>
                <div className="grid grid-cols-2 gap-2">
                  {sleepIssues.map((issue) => (
                    <button
                      key={issue}
                      onClick={() => {
                        const newIssues = onboardingData.sleepIssues.includes(issue)
                          ? onboardingData.sleepIssues.filter(i => i !== issue)
                          : [...onboardingData.sleepIssues, issue];
                        setOnboardingData({...onboardingData, sleepIssues: newIssues});
                      }}
                      className={`p-2 rounded-lg text-sm transition-all ${
                        onboardingData.sleepIssues.includes(issue)
                          ? 'bg-pink-600 border border-pink-400'
                          : 'bg-white/10 border border-white/30 hover:bg-white/20'
                      }`}
                    >
                      {issue}
                    </button>
                  ))}
                </div>
              </div>

              <button
                onClick={completeOnboarding}
                disabled={!onboardingData.name || !onboardingData.nightmareFrequency}
                className="w-full py-4 bg-gradient-to-r from-purple-600 to-pink-600 rounded-lg font-semibold text-lg disabled:opacity-50 disabled:cursor-not-allowed hover:from-purple-700 hover:to-pink-700 transition-all"
              >
                시작하기
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // 메인 앱 레이아웃
  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-indigo-900 text-white">
      {/* 헤더 */}
      <header className="bg-black/20 backdrop-blur-md border-b border-white/10">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <Moon className="w-8 h-8 text-yellow-300" />
              <div>
                <h1 className="text-xl font-bold">DreamEase</h1>
                <p className="text-sm opacity-70">안녕하세요, {user?.name}님</p>
              </div>
            </div>
            <div className="flex items-center space-x-2">
              <TreePine className="w-5 h-5 text-green-400" />
              <span className="text-sm">Lv.{forestLevel}</span>
              <div className="w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center">
                <span className="text-xs font-bold">{dreamPoints}</span>
              </div>
            </div>
          </div>
        </div>
      </header>

      {/* 네비게이션 */}
      <nav className="bg-black/10 backdrop-blur-md border-b border-white/10">
        <div className="container mx-auto px-4">
          <div className="flex space-x-1">
            {[
              { id: 'home', label: '홈', icon: Sun },
              { id: 'record', label: '꿈 기록', icon: BookOpen },
              { id: 'analysis', label: '분석', icon: BarChart3 },
              { id: 'sounds', label: '사운드', icon: Music },
              { id: 'forest', label: '꿈숲', icon: TreePine },
              { id: 'community', label: '커뮤니티', icon: Users }
            ].map(({ id, label, icon: Icon }) => (
              <button
                key={id}
                onClick={() => setCurrentPage(id)}
                className={`flex-1 py-3 px-2 text-xs font-medium transition-all ${
                  currentPage === id
                    ? 'text-purple-300 border-b-2 border-purple-400'
                    : 'text-white/70 hover:text-white'
                }`}
              >
                <Icon className="w-4 h-4 mx-auto mb-1" />
                {label}
              </button>
            ))}
          </div>
        </div>
      </nav>

      {/* 메인 콘텐츠 */}
      <main className="container mx-auto px-4 py-6">
        {/* 홈 페이지 */}
        {currentPage === 'home' && (
          <div className="space-y-6">
            <div className="bg-white/10 backdrop-blur-md rounded-2xl p-6">
              <h2 className="text-2xl font-bold mb-4">오늘의 수면 상태</h2>
              <div className="grid grid-cols-2 gap-4">
                <div className="bg-blue-500/20 rounded-lg p-4">
                  <Calendar className="w-6 h-6 mb-2 text-blue-300" />
                  <p className="text-sm opacity-70">총 기록</p>
                  <p className="text-2xl font-bold">{dreams.length}개</p>
                </div>
                <div className="bg-green-500/20 rounded-lg p-4">
                  <TrendingUp className="w-6 h-6 mb-2 text-green-300" />
                  <p className="text-sm opacity-70">꿈숲 레벨</p>
                  <p className="text-2xl font-bold">Lv.{forestLevel}</p>
                </div>
              </div>
            </div>

            <div className="bg-white/10 backdrop-blur-md rounded-2xl p-6">
              <h3 className="text-lg font-semibold mb-4">추천 액션</h3>
              <div className="space-y-3">
                <button
                  onClick={() => setCurrentPage('record')}
                  className="w-full p-4 bg-gradient-to-r from-purple-600 to-pink-600 rounded-lg flex items-center justify-between hover:from-purple-700 hover:to-pink-700 transition-all"
                >
                  <span>오늘의 꿈 기록하기</span>
                  <Plus className="w-5 h-5" />
                </button>
                <button
                  onClick={() => setCurrentPage('sounds')}
                  className="w-full p-4 bg-gradient-to-r from-blue-600 to-teal-600 rounded-lg flex items-center justify-between hover:from-blue-700 hover:to-teal-700 transition-all"
                >
                  <span>진정 사운드 듣기</span>
                  <Music className="w-5 h-5" />
                </button>
              </div>
            </div>

            {dreams.length > 0 && (
              <div className="bg-white/10 backdrop-blur-md rounded-2xl p-6">
                <h3 className="text-lg font-semibold mb-4">최근 꿈 기록</h3>
                <div className="space-y-3">
                  {dreams.slice(0, 3).map((dream) => (
                    <div key={dream.id} className="bg-white/5 rounded-lg p-4">
                      <div className="flex justify-between items-start mb-2">
                        <p className="text-sm text-white/70">{new Date(dream.timestamp).toLocaleDateString()}</p>
                        <div className="flex space-x-1">
                          {dream.emotions.slice(0, 2).map((emotion, idx) => (
                            <span key={idx} className="text-xs bg-purple-500/30 px-2 py-1 rounded">{emotion}</span>
                          ))}
                        </div>
                      </div>
                      <p className="text-sm line-clamp-2">{dream.content}</p>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        )}

        {/* 꿈 기록 페이지 */}
        {currentPage === 'record' && (
          <div className="max-w-2xl mx-auto space-y-6">
            <div className="bg-white/10 backdrop-blur-md rounded-2xl p-6">
              <h2 className="text-2xl font-bold mb-6">꿈 기록하기</h2>
              
              <div className="space-y-6">
                <div>
                  <label className="block text-sm font-medium mb-2">꿈 내용을 자세히 적어주세요</label>
                  <textarea
                    value={dreamEntry.content}
                    onChange={(e) => setDreamEntry({...dreamEntry, content: e.target.value})}
                    className="w-full h-32 px-4 py-3 bg-white/20 backdrop-blur-sm rounded-lg border border-white/30 text-white placeholder-white/70 resize-none"
                    placeholder="어떤 꿈을 꾸셨나요? 자세히 기록해주세요..."
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">느낀 감정을 선택해주세요 (복수 선택 가능)</label>
                  <div className="grid grid-cols-4 gap-2">
                    {emotionTags.map((emotion) => (
                      <button
                        key={emotion}
                        onClick={() => {
                          const newEmotions = dreamEntry.emotions.includes(emotion)
                            ? dreamEntry.emotions.filter(e => e !== emotion)
                            : [...dreamEntry.emotions, emotion];
                          setDreamEntry({...dreamEntry, emotions: newEmotions});
                        }}
                        className={`p-2 rounded-lg text-sm transition-all ${
                          dreamEntry.emotions.includes(emotion)
                            ? 'bg-red-600 border border-red-400'
                            : 'bg-white/10 border border-white/30 hover:bg-white/20'
                        }`}
                      >
                        {emotion}
                      </button>
                    ))}
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium mb-2">감정 강도: {dreamEntry.intensity}/10</label>
                  <input
                    type="range"
                    min="1"
                    max="10"
                    value={dreamEntry.intensity}
                    onChange={(e) => setDreamEntry({...dreamEntry, intensity: parseInt(e.target.value)})}
                    className="w-full h-2 bg-white/20 rounded-lg appearance-none cursor-pointer"
                  />
                  <div className="flex justify-between text-xs text-white/70 mt-1">
                    <span>약함</span>
                    <span>강함</span>
                  </div>
                </div>

                <button
                  onClick={saveDream}
                  disabled={!dreamEntry.content}
                  className="w-full py-4 bg-gradient-to-r from-purple-600 to-pink-600 rounded-lg font-semibold text-lg disabled:opacity-50 disabled:cursor-not-allowed hover:from-purple-700 hover:to-pink-700 transition-all"
                >
                  꿈 기록 저장하기
                </button>
              </div>
            </div>
          </div>
        )}

        {/* 분석 페이지 */}
        {currentPage === 'analysis' && (
          <div className="space-y-6">
            <div className="bg-white/10 backdrop-blur-md rounded-2xl p-6">
              <h2 className="text-2xl font-bold mb-6">AI 꿈 분석</h2>
              
              {dreams.length > 0 ? (
                <div className="space-y-6">
                  <div className="bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-lg p-4">
                    <h3 className="text-lg font-semibold mb-3">최근 꿈 분석 결과</h3>
                    <div className="space-y-3">
                      <div className="flex items-start space-x-3">
                        <Heart className="w-5 h-5 text-pink-400 mt-1" />
                        <div>
                          <p className="font-medium">감정 분석</p>
                          <p className="text-sm text-white/80">{dreams[0]?.aiAnalysis?.emotion}</p>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <BarChart3 className="w-5 h-5 text-blue-400 mt-1" />
                        <div>
                          <p className="font-medium">패턴 인식</p>
                          <p className="text-sm text-white/80">{dreams[0]?.aiAnalysis?.pattern}</p>
                        </div>
                      </div>
                      <div className="flex items-start space-x-3">
                        <Star className="w-5 h-5 text-yellow-400 mt-1" />
                        <div>
                          <p className="font-medium">추천 사항</p>
                          <p className="text-sm text-white/80">{dreams[0]?.aiAnalysis?.suggestion}</p>
                        </div>
                      </div>
                    </div>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div className="bg-blue-500/20 rounded-lg p-4">
                      <h4 className="font-semibold mb-2">감정 통계</h4>
                      <div className="space-y-2">
                        {['불안', '두려움', '스트레스'].map((emotion, idx) => (
                          <div key={emotion} className="flex justify-between items-center">
                            <span className="text-sm">{emotion}</span>
                            <div className="w-16 h-2 bg-white/20 rounded-full">
                              <div 
                                className="h-full bg-blue-400 rounded-full" 
                                style={{width: `${(3-idx) * 30}%`}}
                              />
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>

                    <div className="bg-green-500/20 rounded-lg p-4">
                      <h4 className="font-semibold mb-2">개선 추이</h4>
                      <div className="text-center">
                        <div className="text-2xl font-bold text-green-400">+15%</div>
                        <p className="text-sm text-white/70">지난 주 대비 수면 질 개선</p>
                      </div>
                    </div>
                  </div>
                </div>
              ) : (
                <div className="text-center py-8">
                  <Moon className="w-16 h-16 mx-auto mb-4 text-white/50" />
                  <p className="text-lg mb-2">아직 분석할 꿈이 없습니다</p>
                  <p className="text-white/70 mb-4">꿈을 기록하시면 AI가 분석해드립니다</p>
                  <button
                    onClick={() => setCurrentPage('record')}
                    className="px-6 py-3 bg-purple-600 rounded-lg hover:bg-purple-700 transition-all"
                  >
                    첫 번째 꿈 기록하기
                  </button>
                </div>
              )}
            </div>
          </div>
        )}

        {/* 사운드 페이지 */}
        {currentPage === 'sounds' && (
          <div className="space-y-6">
            <div className="bg-white/10 backdrop-blur-md rounded-2xl p-6">
              <h2 className="text-2xl font-bold mb-6">치유 사운드</h2>
              
              <div className="grid gap-4">
                {soundContents.map((sound) => (
                  <div key={sound.id} className="bg-white/5 rounded-lg p-4 flex items-center justify-between">
                    <div className="flex-1">
                      <div className="flex items-center space-x-2 mb-1">
                        <h3 className="font-semibold">{sound.name}</h3>
                        {sound.premium && !user?.isPremium && (
                          <span className="text-xs bg-yellow-500/30 text-yellow-300 px-2 py-1 rounded">프리미엄</span>
                        )}
                      </div>
                      <p className="text-sm text-white/70">{sound.type} • {sound.duration}</p>
                    </div>
                    
                    <div className="flex items-center space-x-3">
                      <Volume2 className="w-4 h-4 text-white/50" />
                      <button
                        onClick={() => toggleSound(sound)}
                        disabled={sound.premium && !user?.isPremium}
                        className="w-12 h-12 bg-purple-600 rounded-full flex items-center justify-center hover:bg-purple-700 transition-all disabled:opacity-50 disabled:cursor-not-allowed"
                      >
                        {currentSound === sound.id && isPlaying ? 
                          <Pause className="w-5 h-5" /> : 
                          <Play className="w-5 h-5" />
                        }
                      </button>
                    </div>
                  </div>
                ))}
              </div>

              {currentSound && (
                <div className="mt-6 bg-gradient-to-r from-purple-500/20 to-blue-500/20 rounded-lg p-4">
                  <div className="flex items-center justify-between mb-2">
                    <span className="font-medium">
                      {soundContents.find(s => s.id === currentSound)?.name}
                    </span>
                    <span className="text-sm text-white/70">재생 중</span>
                  </div>
                  <div className="w-full h-1 bg-white/20 rounded-full">
                    <div className="h-full bg-purple-400 rounded-full animate-pulse" style={{width: '45%'}} />
                  </div>
                </div>
              )}
            </div>
          </div>
        )}

        {/* 꿈숲 페이지 */}
        {currentPage === 'forest' && (
          <div className="space-y-6">
            <div className="bg-gradient-to-br from-green-900/50 to-blue-900/50 backdrop-blur-md rounded-2xl p-6">
              <h2 className="text-2xl font-bold mb-6">나의 꿈숲</h2>
              
              <div className="text-center mb-6">
                <div className="relative inline-block">
                  <TreePine className="w-24 h-24 text-green-400 mx-auto" />
                  <div className="absolute -top-2 -right-2 w-8 h-8 bg-yellow-500 rounded-full flex items-center justify-center text-black font-bold text-sm">
                    {forestLevel}
                  </div>
                </div>
                <p className="mt-4 text-lg">레벨 {forestLevel} 꿈숲</p>
                <p className="text-white/70">꿈 포인트: {dreamPoints}/50</p>
                
                <div className="w-full max-w-xs mx-auto mt-3 h-2 bg-white/20 rounded-full">
                  <div 
                    className="h-full bg-green-400 rounded-full transition-all duration-500" 
                    style={{width: `${(dreamPoints % 50) * 2}%`}}
                  />
                </div>
              </div>

              <div className="grid grid-cols-2 gap-4 mb-6">
                <div className="bg-white/10 rounded-lg p-4 text-center">
                  <BookOpen className="w-8 h-8 mx-auto mb-2 text-blue-400" />
                  <p className="text-sm text-white/70">기록한 꿈</p>
                  <p className="text-xl font-bold">{dreams.length}</p>
                </div>
                <div className="bg-white/10 rounded-lg p-4 text-center">
                  <Star className="w-8 h-8 mx-auto mb-2 text-yellow-400" />
                  <p className="text-sm text-white/70">획득 포인트</p>
                  <p className="text-xl font-bold">{dreamPoints}</p>
                </div>
              </div>

              <div className="bg-white/5 rounded-lg p-4">
                <h3 className="font-semibold mb-3">숲 성장 기록</h3>
                <div className="space-y-2">
                  <div className="flex justify-between items-center">
                    <span className="text-sm">첫 번째 나무 심기</span>
                    <span className="text-xs text-green-400">완료</span>
                  </div>
                  <div className="flex justify-between items-center">
                    <span className="text-sm">다람쥐 친구 만나기</span>
                    <span className="text-xs text-yellow-400">진행중</span>
                  </div>
                  <div className="flex justify-between items-center opacity-50">
                    <span className="text-sm">고양이 나타나기</span>
                    <span className="text-xs text-white/50">잠김</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* 커뮤니티 페이지 */}
        {currentPage === 'community' && (
          <div className="space-y-6">
            <div className="bg-white/10 backdrop-blur-md rounded-2xl p-6">
              <h2 className="text-2xl font-bold mb-6">커뮤니티</h2>
              
              <div className="space-y-4">
                <button className="w-full p-4 bg-gradient-to-r from-pink-600 to-purple-600 rounded-lg text-left hover:from-pink-700 hover:to-purple-700 transition-all">
                  <div className="flex items-center justify-between">
                    <div>
                      <h3 className="font-semibold">7일 악몽 프리 챌린지</h3>
                      <p className="text-sm text-white/80">124명이 참여 중</p>
                    </div>
                    <Users className="w-6 h-6" />
                  </div>
                </button>

                <div className="bg-white/5 rounded-lg p-4">
                  <h3 className="font-semibold mb-3">익명 꿈 공유</h3>
                  <div className="space-y-3">
                    {[
                      { id: 1, content: "어젯밤 꾼 꿈이 너무 무서웠어요. 누군가 계속 저를 쫓아오는 꿈이었는데...", emotions: ['무서움', '불안'], likes: 12 },
                      { id: 2, content: "요즘 같은 장소에서 계속 길을 잃는 꿈을 꿔요. 혹시 비슷한 경험 있으신가요?", emotions: ['혼란', '스트레스'], likes: 8 },
                      { id: 3, content: "DreamEase 사용한지 일주일됐는데 정말 도움이 돼요! 악몽이 줄어들고 있어요.", emotions: ['기쁨'], likes: 25 }
                    ].map((post) => (
                      <div key={post.id} className="bg-white/5 rounded-lg p-3">
                        <p className="text-sm mb-2">{post.content}</p>
                        <div className="flex items-center justify-between">
                          <div className="flex space-x-1">
                            {post.emotions.map((emotion, idx) => (
                              <span key={idx} className="text-xs bg-purple-500/30 px-2 py-1 rounded">{emotion}</span>
                            ))}
                          </div>
                          <div className="flex items-center space-x-2">
                            <Heart className="w-4 h-4 text-pink-400" />
                            <span className="text-xs">{post.likes}</span>
                            <MessageCircle className="w-4 h-4 text-blue-400" />
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
      </main>

      {/* 프리미엄 업그레이드 플로팅 버튼 */}
      {!user?.isPremium && (
        <div className="fixed bottom-6 right-6">
          <button className="bg-gradient-to-r from-yellow-500 to-orange-500 text-white px-6 py-3 rounded-full shadow-lg hover:shadow-xl transition-all transform hover:scale-105">
            <div className="flex items-center space-x-2">
              <Star className="w-5 h-5" />
              <span className="font-semibold">프리미엄</span>
            </div>
          </button>
        </div>
      )}
    </div>
  );
};

export default DreamEase;